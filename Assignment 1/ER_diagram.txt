/* === Package, Employee, Customer, Facility Tables === */
[Employees](employeeID*, name, gender, dateOfBirth, title, salary);
[Customers](customerID*, name, gender, phoneNumber);
[Facilities](facilityID*, address, postalCode);
[[Packages]](packageID*, weight, 
    dimensions(height, width, depth),
    contentDescription,
    estimatedValue); 

/* === Delivery Request Tables === */
[PaymentRecords](paymentRecordID*, paymentCost);
[SuccessfulPaymentRecords](creditCardNumber, paymentTimestamp); /* ISA PaymentRecord*/
[UnsuccessfulPaymentRecords](); /* ISA PaymentRecord*/
[DeliveryRequests](requestID*, 
    pickupAddress, 
    pickupPostalCode, 
    recipientName, 
    recipientAddress, 
    recipientPostalCode);
[AcceptableRequests](deliveryPrice,
    tentativePickupDate,
    estimatedDaysToDelivery); /*ISA delivery req*/
[UnacceptableRequests](); /*ISA delivery req*/
[AcceptedRequests](paymentRecord); /*ISA acceptable req, after payment is made*/
[WithdrawnRequests](); /*ISA acceptable req*/
[NormalDeliveryRequests](); /*ISA accepted req*/
[ReturnDeliveryRequests](); /*ISA accepted req*/
<PaidBy>();

/* === Delivery Process Tables === */
[[Legs]]();
[[FirstLegs]](weight, dimensions);
[[IntermediateLegs]]();
[[FinalLegs]](destAddress);
<Delivers>(srcAddress, destAddress);
<Precedes>(); /*a leg precedes another leg*/
<<Has>>(); /* Accepted req has leg*/
Legs --- Precedes [prev];
Legs --- Precedes [next];
Legs ==> {FirstLegs, IntermediateLegs, FinalLegs};
Legs --- Delivers;
Facilities --- Delivers [src];
Facilities --- Delivers [dest];
AcceptedRequests --- Has;
Legs ==> Has;

/* === Relationship Tables === */
[[Pickup]]();
<HandlesReq>(); /* Employee handles a DR */
<HandlesLeg>(); /*Emmployee handles a Leg in the DR */
<Makes>(); /* Customer makes a DR */
<<Consists>>(); /* DR consists of packages */
<<Records>>(); /* Each leg records delivery pickups */

/* === Mapping Relationships === */
/* Each DR is made by exactly 1 Customer
*  Customer makes 1 or more DR
*/
DeliveryRequests ==> Makes;
Customers === Makes;

/* DR consists of one or more Packages
Each Package is consisted by only one DR
*/
DeliveryRequests === Consists;
Packages ==> Consists;

/* DR must be handled (processed) by at least 1 Employee 
Each Employee can handle 0 or more DR
*/
Employees --- HandlesReq;
DeliveryRequests === HandlesReq; 

/* AcceptedRequests is paid by one PaymentRecords
PaymentRecords is tied to one AcceptedRequests */
AcceptedRequests ==> PaidBy;
PaymentRecords ==> PaidBy;


Employees --- HandlesLeg;
Legs ==> HandlesLeg;
Legs === Records;
Pickup --- Records;


DeliveryRequests --> {AcceptableRequests, UnacceptableRequests};
AcceptableRequests --> {AcceptedRequests, WithdrawnRequests};
AcceptedRequests --> {NormalDeliveryRequests, ReturnDeliveryRequests};
PaymentRecords --> {SuccessfulPaymentRecords, UnsuccessfulPaymentRecords};

