/* === Package, Employee, Customer, Facility Tables === */
[Employees](employeeID*, name, gender, dateOfBirth, title, salary);
[Customers](customerID*, name, gender, phoneNumber);
[Facilities](facilityID*, address, postalCode);
[[Packages]](packageID*, weight, 
    dimensions(height, width, depth),
    contentDescription,
    estimatedValue); 

/* === Delivery Request Tables === */
[DeliveryRequests](requestID*, 
    pickupAddress, 
    pickupPostalCode, 
    recipientName, 
    recipientAddress, 
    recipientPostalCode);
[AcceptableRequests](deliveryPrice,
    tentativePickupDate,
    estimatedDaysToDelivery); /*ISA delivery req*/
[UnacceptableRequests](); /*ISA delivery req*/
[AcceptedRequests](requestStatus, 
    paymentCost,
    creditCardNumber, 
    paymentTimestamp); /*ISA acceptable req, after payment is made*/
[WithdrawnRequests](); /*ISA acceptable req*/

/* === Delivery Process Tables === */
[[Legs]](startingTimestamp, endingTimestamp);
[[FirstLegs]](weight, dimensions(height, width, depth));
[[IntermediateLegs]](reasonOfFailure);
[[FinalLegs]]();
[<Delivers>]();
<Precedes>(); /*a leg precedes another leg*/


/* === Relationship/Aggregation Tables === */
[[UnsuccessfulPickups]](timestamp, reason);
<PicksUp>();
<Processes>(); /* Employee processes a DR. NOTE: Different from handling! */
<Monitors>(); /*Employee monitors a Delivery Process */
<Makes>(); /* Customer makes a DR */
<<Carries>>(); /* DR carries packages */
<<Records>>(); /* Record unsuccessful pickups */
<To>(srcAddress, destAddress); /* Delivery between src and location */
<<Consists>>();

/* === Mapping Relationships === */
/* Each DR is made by exactly 1 Customer
*  Customer makes 1 or more DR
*/
DeliveryRequests ==> Makes;
Customers === Makes;

/* DR consists of one or more Packages
Each Package is consisted by only one DR
*/
DeliveryRequests === Carries;
Packages ==> Carries;

/* DR must be processed by at least 1 Employee 
Each Employee can handle 0 or more DR
*/
Employees --- Processes;
DeliveryRequests === Processes; 

/* A leg is delivered to facilities that act as a src and dest.
A leg has to deliver from and only to one location.
A leg is also delivered by only one Employee. */
Legs ==> Delivers;
Employees --> Delivers;
Delivers ==> To;

/* Packages delivered to a Facility or
an address */
Facilities --- To [src];
Facilities --- To [dest];

/* Assume we do not record unsuccessful pickups. Then
an AcceptedRequest can have 0 or more unsuccesful pickups, but
an unsuccessful pickup has only one AcceptedRequest*/
AcceptedRequests ==> Records;
UnsuccessfulPickups  --- Records;

/* An unsuccesful pickup is always done so by an Employee, and an Employee can
only attempt each unsuccesful pickup */
UnsuccessfulPickups ==> PicksUp;
Employees --- PicksUp;

/* Maps src and dest of legs */
Legs --- Precedes [prev];
Legs --- Precedes [next];

/* Employee monitors 0 or more AcceptedRequests
AcceptedRequests monitored by only one Employee
*/
Employees --- Monitors; 
AcceptedRequests ==> Monitors;

/* AcceptableRequests consists of 2 or more legs
Legs matched to only one AcceptableRequests
*/
AcceptableRequests === Consists;
Legs ==> Consists;


/* ===== ISA Relationships ===== */
DeliveryRequests --> {AcceptableRequests, UnacceptableRequests};
AcceptableRequests --> {AcceptedRequests, WithdrawnRequests};
Legs ==> {FirstLegs, IntermediateLegs, FinalLegs};

